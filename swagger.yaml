openapi: '3.0.3'
info:
  title: Configuration manager apis 
  description: |
    Configuration manager is responsible to manage all dynamic Configuration for the system.
    Only users with Admin rights can access the apis exposed by the component
  version: 0.1.0
servers:
   - url: /configuration-manager/api/v1/
components:
  schemas:
    config_item:
      description: extenal config_item modelmodel
      type: object
      properties:
        context:
          type: string
        key:
          type: string
        value:
          type: string
      required:
      - key
      - context
      - value
    complete_config_item:
      allOf:
        - $ref: "#/components/schemas/config_item"
        - type: object
          properties:
            original_value:
              type: string
            disabled_timestamp:
              type: string
              format: date-time
            from_config:
              type: boolean
  responses:
    "404":
      description: resource not found
    "403":
      description: user not allowed
    "500":
      description: unexpected exception occurred
tags:
  - name: wheeljack
    description: All config routes
paths:
  /keys:
    get:
      tags:
        - wheeljack
      summary: all enabled configuration keys
      operationId: get_all_keys
      parameters:
        - in: query
          required: false
          description: filter by context
          name: context 
          schema:
            type: string 
        - in: query
          required: false
          description: if true retrieve disabled keys
          name: disabled
          schema:
            type: boolean
      responses:
        "200": 
          description: list of string with the keys for the configurations stored on the system 
          content:
            application/json:
              schema:
                oneOf:
                - type: object
                  additionalProperties:
                    type: array
                    items:
                      type: string
        "404":
          $ref: "#/components/responses/404"
        "403":
          $ref: "#/components/responses/403"
        "500":
          $ref: "#/components/responses/500"
  /:
    post:
      tags:
        - wheeljack
      summary: force reload of all configurations
      operationId: reload_config
      description: |
        Delete the content of the rabbitmq configuaration topic.  <br/>
        Publish all enabled keys
      responses: 
        "200":
          description: update successfully
        "403":
          $ref: "#/components/responses/403"
        "500":
          $ref: "#/components/responses/500"
  /{context}/{key}:
    parameters:
        - in: path 
          required: true
          description: key value
          name: key 
          schema:
            type: string 
        - in: path
          required: true
          description: context name
          name: context
          schema:
            type: string
    get:
      tags:
        - wheeljack
      summary: key detail
      operationId: get_key
      responses:
        "200":
          description: configuration item detail
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/complete_config_item"
        "404":
          $ref: "#/components/responses/404"
        "403":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"
    post:
      tags:
        - wheeljack
      summary: create a new entry with the provided context and key
      operationId: create_key
      description: |
        Create a new entry for the key/values pairs. <br/>
        Original and current value are the same.<br/>
        The new entry contains the value `from_config = false`
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        "201":
          description: entry created
        "404":
          $ref: "#/components/responses/404"
        "403":
          $ref: "#/components/responses/403"
        "500":
          $ref: "#/components/responses/500"
    delete:
      tags:
        - wheeljack
      summary: logically delete an entry (set disabled_timestamp to now)
      operationId: delete_key
      responses:
        "200":
          description: deleted
        "404":
          $ref: "#/components/responses/404"
        "403":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"
